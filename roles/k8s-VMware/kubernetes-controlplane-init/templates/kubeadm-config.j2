apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
nodeRegistration:
  name: "{{ kubernetes_first_master_hostname}}.{{ domain_name }}"
  criSocket: "/var/run/dockershim.sock"
localAPIEndPoint:
  advertiseAddress: "{{ kubernetes_first_master_hostname }}"
  bindPort: "{{ kubernetes_api_port }}"

---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
kubernetesVersion: "{{ kubernetes_version }}"
apiServer:
  certSANs:
  - "{{ kubernetes_api_vip_ip }}"
  - "{{ kubernetes_api_vip_hostname }}"
  - "{{ kubernetes_api_vip_hostname }}.{{ domain_name }}"
  - "{{ kubernetes_first_master_hostname}}"
  - "{{ kubernetes_first_master_hostname}}.{{ domain_name }}"
controlPlaneEndpoint: "{{ kubernetes_api_vip_hostname }}:{{ kubernetes_api_port }}"
etcd:
    external:
        endpoints:
        - "https://{{ kubernetes_etcd_vip_ip }}:{{ kubernetes_etcd_client_port }}"
        - "https://{{ kubernetes_etcd_vip_hostname }}:{{ kubernetes_etcd_client_port }}"
{% for host in groups['etcds'] %}
        - "https://{{ hostvars[host]['ansible_default_ipv4']['address'] }}:{{ kubernetes_etcd_client_port }}"
{% endfor %}
        caFile: /etc/kubernetes/pki/etcd/ca.crt
        certFile: /etc/kubernetes/pki/apiserver-etcd-client.crt
        keyFile: /etc/kubernetes/pki/apiserver-etcd-client.key
networking:
  serviceSubnet: "{{ kubernetes_pod_subnet }}"
clusterName: "{{ kubernetes_cluster_label }}"

---
kind: KubeletConfiguration
apiVersion: kubelet.config.k8s.io/v1beta1
cgroupDriver: systemd
