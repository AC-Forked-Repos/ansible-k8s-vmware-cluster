# {{ ansible_managed }}
global
    log 127.0.0.1:514	local0
    log 127.0.0.1:514 local0 info
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user        haproxy
    group       haproxy
    daemon
    pidfile     /var/run/haproxy.pid
    maxconn     4000

    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
    ssl-default-bind-options no-sslv3

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

http-errors myerrors
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 401 /etc/haproxy/errors/401.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 404 /etc/haproxy/errors/404.http


########################################################## ETCD CLIENT FRONTEND
frontend k8s-frontend-etcd
   bind *:{{ kubernetes_etcd_client_port }}
   mode tcp
   option tcplog
   default_backend k8s-etcd-client-backend


################################################################ STATS FRONTEND
frontend k8s-frontend-stats
   bind *:{{ haproxy_stats_port }}
   stats enable
   stats uri {{ haproxy_stats_endpoint }}
   stats refresh 20s
   stats admin if TRUE


########################################################## ETCD CLIENT BACKTEND
backend k8s-etcd-client-backend
   mode tcp
   option tcplog
   option tcp-check
   balance roundrobin
   default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
{% for host in groups['etcds'] %}
   server {{ host }} {{ hostvars[host]['ansible_default_ipv4']['address'] }}:{{ kubernetes_etcd_client_port }} check
{% endfor %}